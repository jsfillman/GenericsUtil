
package us.kbase.kbaseontology;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Generated;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * <p>Original spec-file type: OntologyDictionary</p>
 * <pre>
 * @optional data_version date saved_by auto_generated_by import subsetdef synonymtypedef default_namespace namespace_id_rule idspace treat_xrefs_as_equivalent treat_xrefs_as_genus_differentia treat_xrefs_as_relationship treat_xrefs_as_is_a remark ontology typedef_hash instance_hash
 * </pre>
 * 
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@Generated("com.googlecode.jsonschema2pojo")
@JsonPropertyOrder({
    "format_version",
    "data_version",
    "date",
    "saved_by",
    "auto_generated_by",
    "import",
    "subsetdef",
    "synonymtypedef",
    "default_namespace",
    "namespace_id_rule",
    "idspace",
    "treat_xrefs_as_equivalent",
    "treat_xrefs_as_genus_differentia",
    "treat_xrefs_as_relationship",
    "treat_xrefs_as_is_a",
    "remark",
    "ontology",
    "term_hash",
    "typedef_hash",
    "instance_hash"
})
public class OntologyDictionary {

    @JsonProperty("format_version")
    private java.lang.String formatVersion;
    @JsonProperty("data_version")
    private java.lang.String dataVersion;
    @JsonProperty("date")
    private java.lang.String date;
    @JsonProperty("saved_by")
    private java.lang.String savedBy;
    @JsonProperty("auto_generated_by")
    private java.lang.String autoGeneratedBy;
    @JsonProperty("import")
    private List<String> _import;
    @JsonProperty("subsetdef")
    private List<String> subsetdef;
    @JsonProperty("synonymtypedef")
    private List<String> synonymtypedef;
    @JsonProperty("default_namespace")
    private java.lang.String defaultNamespace;
    @JsonProperty("namespace_id_rule")
    private List<String> namespaceIdRule;
    @JsonProperty("idspace")
    private List<String> idspace;
    @JsonProperty("treat_xrefs_as_equivalent")
    private List<String> treatXrefsAsEquivalent;
    @JsonProperty("treat_xrefs_as_genus_differentia")
    private List<String> treatXrefsAsGenusDifferentia;
    @JsonProperty("treat_xrefs_as_relationship")
    private List<String> treatXrefsAsRelationship;
    @JsonProperty("treat_xrefs_as_is_a")
    private List<String> treatXrefsAsIsA;
    @JsonProperty("remark")
    private List<String> remark;
    @JsonProperty("ontology")
    private java.lang.String ontology;
    @JsonProperty("term_hash")
    private Map<String, OntologyTerm> termHash;
    @JsonProperty("typedef_hash")
    private Map<String, OntologyTypedef> typedefHash;
    @JsonProperty("instance_hash")
    private Map<String, OntologyInstance> instanceHash;
    private Map<java.lang.String, Object> additionalProperties = new HashMap<java.lang.String, Object>();

    @JsonProperty("format_version")
    public java.lang.String getFormatVersion() {
        return formatVersion;
    }

    @JsonProperty("format_version")
    public void setFormatVersion(java.lang.String formatVersion) {
        this.formatVersion = formatVersion;
    }

    public OntologyDictionary withFormatVersion(java.lang.String formatVersion) {
        this.formatVersion = formatVersion;
        return this;
    }

    @JsonProperty("data_version")
    public java.lang.String getDataVersion() {
        return dataVersion;
    }

    @JsonProperty("data_version")
    public void setDataVersion(java.lang.String dataVersion) {
        this.dataVersion = dataVersion;
    }

    public OntologyDictionary withDataVersion(java.lang.String dataVersion) {
        this.dataVersion = dataVersion;
        return this;
    }

    @JsonProperty("date")
    public java.lang.String getDate() {
        return date;
    }

    @JsonProperty("date")
    public void setDate(java.lang.String date) {
        this.date = date;
    }

    public OntologyDictionary withDate(java.lang.String date) {
        this.date = date;
        return this;
    }

    @JsonProperty("saved_by")
    public java.lang.String getSavedBy() {
        return savedBy;
    }

    @JsonProperty("saved_by")
    public void setSavedBy(java.lang.String savedBy) {
        this.savedBy = savedBy;
    }

    public OntologyDictionary withSavedBy(java.lang.String savedBy) {
        this.savedBy = savedBy;
        return this;
    }

    @JsonProperty("auto_generated_by")
    public java.lang.String getAutoGeneratedBy() {
        return autoGeneratedBy;
    }

    @JsonProperty("auto_generated_by")
    public void setAutoGeneratedBy(java.lang.String autoGeneratedBy) {
        this.autoGeneratedBy = autoGeneratedBy;
    }

    public OntologyDictionary withAutoGeneratedBy(java.lang.String autoGeneratedBy) {
        this.autoGeneratedBy = autoGeneratedBy;
        return this;
    }

    @JsonProperty("import")
    public List<String> getImport() {
        return _import;
    }

    @JsonProperty("import")
    public void setImport(List<String> _import) {
        this._import = _import;
    }

    public OntologyDictionary withImport(List<String> _import) {
        this._import = _import;
        return this;
    }

    @JsonProperty("subsetdef")
    public List<String> getSubsetdef() {
        return subsetdef;
    }

    @JsonProperty("subsetdef")
    public void setSubsetdef(List<String> subsetdef) {
        this.subsetdef = subsetdef;
    }

    public OntologyDictionary withSubsetdef(List<String> subsetdef) {
        this.subsetdef = subsetdef;
        return this;
    }

    @JsonProperty("synonymtypedef")
    public List<String> getSynonymtypedef() {
        return synonymtypedef;
    }

    @JsonProperty("synonymtypedef")
    public void setSynonymtypedef(List<String> synonymtypedef) {
        this.synonymtypedef = synonymtypedef;
    }

    public OntologyDictionary withSynonymtypedef(List<String> synonymtypedef) {
        this.synonymtypedef = synonymtypedef;
        return this;
    }

    @JsonProperty("default_namespace")
    public java.lang.String getDefaultNamespace() {
        return defaultNamespace;
    }

    @JsonProperty("default_namespace")
    public void setDefaultNamespace(java.lang.String defaultNamespace) {
        this.defaultNamespace = defaultNamespace;
    }

    public OntologyDictionary withDefaultNamespace(java.lang.String defaultNamespace) {
        this.defaultNamespace = defaultNamespace;
        return this;
    }

    @JsonProperty("namespace_id_rule")
    public List<String> getNamespaceIdRule() {
        return namespaceIdRule;
    }

    @JsonProperty("namespace_id_rule")
    public void setNamespaceIdRule(List<String> namespaceIdRule) {
        this.namespaceIdRule = namespaceIdRule;
    }

    public OntologyDictionary withNamespaceIdRule(List<String> namespaceIdRule) {
        this.namespaceIdRule = namespaceIdRule;
        return this;
    }

    @JsonProperty("idspace")
    public List<String> getIdspace() {
        return idspace;
    }

    @JsonProperty("idspace")
    public void setIdspace(List<String> idspace) {
        this.idspace = idspace;
    }

    public OntologyDictionary withIdspace(List<String> idspace) {
        this.idspace = idspace;
        return this;
    }

    @JsonProperty("treat_xrefs_as_equivalent")
    public List<String> getTreatXrefsAsEquivalent() {
        return treatXrefsAsEquivalent;
    }

    @JsonProperty("treat_xrefs_as_equivalent")
    public void setTreatXrefsAsEquivalent(List<String> treatXrefsAsEquivalent) {
        this.treatXrefsAsEquivalent = treatXrefsAsEquivalent;
    }

    public OntologyDictionary withTreatXrefsAsEquivalent(List<String> treatXrefsAsEquivalent) {
        this.treatXrefsAsEquivalent = treatXrefsAsEquivalent;
        return this;
    }

    @JsonProperty("treat_xrefs_as_genus_differentia")
    public List<String> getTreatXrefsAsGenusDifferentia() {
        return treatXrefsAsGenusDifferentia;
    }

    @JsonProperty("treat_xrefs_as_genus_differentia")
    public void setTreatXrefsAsGenusDifferentia(List<String> treatXrefsAsGenusDifferentia) {
        this.treatXrefsAsGenusDifferentia = treatXrefsAsGenusDifferentia;
    }

    public OntologyDictionary withTreatXrefsAsGenusDifferentia(List<String> treatXrefsAsGenusDifferentia) {
        this.treatXrefsAsGenusDifferentia = treatXrefsAsGenusDifferentia;
        return this;
    }

    @JsonProperty("treat_xrefs_as_relationship")
    public List<String> getTreatXrefsAsRelationship() {
        return treatXrefsAsRelationship;
    }

    @JsonProperty("treat_xrefs_as_relationship")
    public void setTreatXrefsAsRelationship(List<String> treatXrefsAsRelationship) {
        this.treatXrefsAsRelationship = treatXrefsAsRelationship;
    }

    public OntologyDictionary withTreatXrefsAsRelationship(List<String> treatXrefsAsRelationship) {
        this.treatXrefsAsRelationship = treatXrefsAsRelationship;
        return this;
    }

    @JsonProperty("treat_xrefs_as_is_a")
    public List<String> getTreatXrefsAsIsA() {
        return treatXrefsAsIsA;
    }

    @JsonProperty("treat_xrefs_as_is_a")
    public void setTreatXrefsAsIsA(List<String> treatXrefsAsIsA) {
        this.treatXrefsAsIsA = treatXrefsAsIsA;
    }

    public OntologyDictionary withTreatXrefsAsIsA(List<String> treatXrefsAsIsA) {
        this.treatXrefsAsIsA = treatXrefsAsIsA;
        return this;
    }

    @JsonProperty("remark")
    public List<String> getRemark() {
        return remark;
    }

    @JsonProperty("remark")
    public void setRemark(List<String> remark) {
        this.remark = remark;
    }

    public OntologyDictionary withRemark(List<String> remark) {
        this.remark = remark;
        return this;
    }

    @JsonProperty("ontology")
    public java.lang.String getOntology() {
        return ontology;
    }

    @JsonProperty("ontology")
    public void setOntology(java.lang.String ontology) {
        this.ontology = ontology;
    }

    public OntologyDictionary withOntology(java.lang.String ontology) {
        this.ontology = ontology;
        return this;
    }

    @JsonProperty("term_hash")
    public Map<String, OntologyTerm> getTermHash() {
        return termHash;
    }

    @JsonProperty("term_hash")
    public void setTermHash(Map<String, OntologyTerm> termHash) {
        this.termHash = termHash;
    }

    public OntologyDictionary withTermHash(Map<String, OntologyTerm> termHash) {
        this.termHash = termHash;
        return this;
    }

    @JsonProperty("typedef_hash")
    public Map<String, OntologyTypedef> getTypedefHash() {
        return typedefHash;
    }

    @JsonProperty("typedef_hash")
    public void setTypedefHash(Map<String, OntologyTypedef> typedefHash) {
        this.typedefHash = typedefHash;
    }

    public OntologyDictionary withTypedefHash(Map<String, OntologyTypedef> typedefHash) {
        this.typedefHash = typedefHash;
        return this;
    }

    @JsonProperty("instance_hash")
    public Map<String, OntologyInstance> getInstanceHash() {
        return instanceHash;
    }

    @JsonProperty("instance_hash")
    public void setInstanceHash(Map<String, OntologyInstance> instanceHash) {
        this.instanceHash = instanceHash;
    }

    public OntologyDictionary withInstanceHash(Map<String, OntologyInstance> instanceHash) {
        this.instanceHash = instanceHash;
        return this;
    }

    @JsonAnyGetter
    public Map<java.lang.String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperties(java.lang.String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public java.lang.String toString() {
        return ((((((((((((((((((((((((((((((((((((((((((("OntologyDictionary"+" [formatVersion=")+ formatVersion)+", dataVersion=")+ dataVersion)+", date=")+ date)+", savedBy=")+ savedBy)+", autoGeneratedBy=")+ autoGeneratedBy)+", _import=")+ _import)+", subsetdef=")+ subsetdef)+", synonymtypedef=")+ synonymtypedef)+", defaultNamespace=")+ defaultNamespace)+", namespaceIdRule=")+ namespaceIdRule)+", idspace=")+ idspace)+", treatXrefsAsEquivalent=")+ treatXrefsAsEquivalent)+", treatXrefsAsGenusDifferentia=")+ treatXrefsAsGenusDifferentia)+", treatXrefsAsRelationship=")+ treatXrefsAsRelationship)+", treatXrefsAsIsA=")+ treatXrefsAsIsA)+", remark=")+ remark)+", ontology=")+ ontology)+", termHash=")+ termHash)+", typedefHash=")+ typedefHash)+", instanceHash=")+ instanceHash)+", additionalProperties=")+ additionalProperties)+"]");
    }

}
